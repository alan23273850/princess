Loading ARI120=1.p ...

VALID
% SZS status Theorem for ARI120=1

Loading ARI184=1.p ...

VALID
% SZS status Theorem for ARI184=1

Loading ARI496=1.p ...

VALID
% SZS status Theorem for ARI496=1

Loading ARI595=1.p ...

VALID
% SZS status Theorem for ARI595=1

Loading ARI616=1.p ...

VALID
% SZS status Theorem for ARI616=1

Loading ARI620=1.p ...

VALID
% SZS status Theorem for ARI620=1

Loading ARI526=1.p ...

VALID
% SZS status Theorem for ARI526=1

Loading ARI522=1.p ...

VALID
% SZS status Theorem for ARI522=1

Loading ARI522=1-mod.p ...

INVALID

Countermodel:
real_87/20 = 0 & rat_87/20 = 0 & real_17/4 = 1 & rat_17/4 = 1 & real_3/4 = -1 & rat_3/4 = -1 & real_18/5 = 2 & rat_18/5 = 2 & real_0 = -2 & rat_0 = -2
% SZS status CounterSatisfiable for ARI522=1-mod

Loading GEG021=1.p ...

VALID
% SZS status Theorem for GEG021=1

Loading PUZ133=2.p ...

VALID
% SZS status Theorem for PUZ133=2

Loading SYN050-1.p ...

VALID
% SZS status Unsatisfiable for SYN050-1

Loading SYO561_1.p ...

VALID
% SZS status Theorem for SYO561_1

Loading SYO563+1.p ...

VALID
% SZS status Theorem for SYO563+1

Loading SYO563+2.p ...

VALID
% SZS status Theorem for SYO563+2

Loading let-tests.p ...

VALID
% SZS status Theorem for let-tests

Loading quotes.p ...

INVALID

Countermodel:
constant_in_Pair[Int,Int] = 0 & green:\\'Color' = 0 & red:Color = 1 & in_Color(1) & in_Color(0) & in_Pair[Int,Int](0)
% SZS status Satisfiable for quotes

Loading multiple-conjectures.p ...

VALID
% SZS status Theorem for multiple-conjectures

Loading SYN340+1.p ...

VALID
% SZS status Theorem for SYN340+1

Loading SYN340+1-mod.p ...

VALID
% SZS status Theorem for SYN340+1-mod

Loading set-Bidule-Inter.p ...

VALID
% SZS status Theorem for set-Bidule-Inter

Loading PUZ001+1.p ...

VALID
% SZS status Theorem for PUZ001+1

Loading unsat-core.p ...
Preprocessing ...
Warning: ignoring some quantifiers
Constructing countermodel ...
Found proof (size 96)

VALID
% SZS status Theorem for unsat-core

Unsatisfiable core:
{DIFF-row1-row2, DIFF-row1-row3, DIFF-row2-row3, DIFF-tempty-tcons, EQ-tcons, rawDifference-INV, rawDifference2, rawDifference5, rowIn-true-INV, rowIn0, rowIn1, test-4}

Loading unsat-core.p ...
Preprocessing ...
Warning: ignoring some quantifiers
Constructing countermodel ...
Found proof (size 96)

VALID
% SZS status Theorem for unsat-core

% SZS output start Proof for unsat-core
Assumptions after simplification:
---------------------------------

  (DIFF-row1-row2)
   ~ (vrow1 = vrow2)

  (DIFF-row1-row3)
   ~ (vrow3 = vrow1)

  (DIFF-row2-row3)
   ~ (vrow3 = vrow2)

  (DIFF-tempty-tcons)
   ! [v0: $int] :  ! [v1: $int] :  ~ (vtcons(v0, v1) = vtempty)

  (EQ-tcons)
   ! [v0: $int] :  ! [v1: $int] :  ! [v2: $int] :  ! [v3: $int] :  ! [v4: $int]
  : ( ~ (vtcons(v1, v3) = v4) |  ~ (vtcons(v0, v2) = v4) | (v3 = v2 & v1 = v0))
  &  ! [v0: $int] :  ! [v1: $int] :  ! [v2: $int] :  ! [v3: $int] : (v3 = v2 | 
    ~ (vtcons(v0, v1) = v3) |  ~ (vtcons(v0, v1) = v2))

  (rawDifference-INV)
   ! [v0: $int] :  ! [v1: $int] :  ! [v2: $int] : ( ~ (vrawDifference(v0, v1) =
      v2) |  ? [v3: $int] :  ? [v4: $int] :  ? [v5: $int] :  ? [v6: $int] : ( ~
      (v6 = 0) &  ~ (v4 = vtempty) & vrawDifference(v4, v1) = v3 & vrowIn(v5,
        v1) = v6 & vtcons(v5, v4) = v0 & vtcons(v5, v3) = v2) |  ? [v3: $int] : 
    ? [v4: $int] : (v2 = v0 &  ~ (v4 = 0) & vrowIn(v3, v1) = v4 & vtcons(v3,
        vtempty) = v0) |  ? [v3: $int] :  ? [v4: $int] : ( ~ (v3 = vtempty) &
      vrawDifference(v3, v1) = v2 & vrowIn(v4, v1) = 0 & vtcons(v4, v3) = v0) | 
    ? [v3: $int] : (v2 = vtempty & vrowIn(v3, v1) = 0 & vtcons(v3, vtempty) =
      v0) | (v2 = v0 & v1 = vtempty) | (v2 = vtempty & v0 = vtempty))

  (rawDifference2)
   ! [v0: $int] :  ! [v1: $int] :  ! [v2: $int] :  ! [v3: $int] : (v3 = v2 |  ~
    (vrawDifference(v2, v1) = v3) |  ~ (vtcons(v0, vtempty) = v2) | vrowIn(v0,
      v1) = 0)

  (rawDifference5)
   ? [v0: $int] :  ! [v1: $int] :  ! [v2: $int] :  ! [v3: $int] :  ! [v4: $int]
  :  ! [v5: $int] : (v5 = v0 | v1 = vtempty |  ~ (vrawDifference(v4, v2) = v5) |
     ~ (vtcons(v3, v1) = v4) |  ? [v6: $int] :  ? [v7: $int] : (( ~ (v7 = 0) &
        vrowIn(v3, v2) = v7) | ( ~ (v6 = v0) & vrawDifference(v1, v2) = v6)))

  (rowIn-true-INV)
   ! [v0: $int] :  ! [v1: $int] : ( ~ (vrowIn(v0, v1) = 0) |  ? [v2: $int] :  ?
    [v3: $int] :  ? [v4: $int] : (vtcons(v2, v3) = v1 & (v2 = v0 | (v4 = 0 &
          vrowIn(v0, v3) = 0))))

  (rowIn0)
   ! [v0: $int] :  ~ (vrowIn(v0, vtempty) = 0)

  (rowIn1)
   ! [v0: $int] :  ! [v1: $int] :  ! [v2: $int] :  ! [v3: $int] :  ! [v4: $int]
  : (v4 = 0 |  ~ (vrowIn(v0, v3) = v4) |  ~ (vtcons(v1, v2) = v3) | ( ~ (v1 =
        v0) &  ? [v5: $int] : ( ~ (v5 = 0) & vrowIn(v0, v2) = v5))) &  ! [v0:
    $int] :  ! [v1: $int] :  ! [v2: $int] :  ! [v3: $int] : (v1 = v0 |  ~
    (vrowIn(v0, v3) = 0) |  ~ (vtcons(v1, v2) = v3) | vrowIn(v0, v2) = 0)

  (test-4)
   ? [v0: $int] :  ? [v1: $int] :  ? [v2: $int] :  ? [v3: $int] : (vtcons(vrow3,
      v2) = v3 & vtcons(vrow1, v0) = v1 & vtcons(vrow1, vtempty) = v2 &
    vtcons(vrow2, vtempty) = v0 &  ? [v4: $int] : ( ~ (v4 = v0) &
      vrawDifference(v1, v3) = v4))

Further assumptions not needed in the proof:
--------------------------------------------
DIFF-Intersection-Difference, DIFF-SelectAllFrom-Difference,
DIFF-SelectAllFrom-Intersection, DIFF-SelectAllFrom-SelectAllFromWhere,
DIFF-SelectAllFrom-SelectSomeFrom, DIFF-SelectAllFrom-SelectSomeFromWhere,
DIFF-SelectAllFrom-Union, DIFF-SelectAllFromWhere-Difference,
DIFF-SelectAllFromWhere-Intersection,
DIFF-SelectAllFromWhere-SelectSomeFromWhere, DIFF-SelectAllFromWhere-Union,
DIFF-SelectSomeFrom-Difference, DIFF-SelectSomeFrom-Intersection,
DIFF-SelectSomeFrom-SelectAllFromWhere, DIFF-SelectSomeFrom-SelectSomeFromWhere,
DIFF-SelectSomeFrom-Union, DIFF-SelectSomeFromWhere-Difference,
DIFF-SelectSomeFromWhere-Intersection, DIFF-SelectSomeFromWhere-Union,
DIFF-Tvalue-Difference, DIFF-Tvalue-Intersection, DIFF-Tvalue-SelectAllFrom,
DIFF-Tvalue-SelectAllFromWhere, DIFF-Tvalue-SelectSomeFrom,
DIFF-Tvalue-SelectSomeFromWhere, DIFF-Tvalue-Union, DIFF-Union-Difference,
DIFF-Union-Intersection, DIFF-VEquals-VGreater, DIFF-VEquals-VSmaller,
DIFF-VGreater-VSmaller, DIFF-aempty-acons, DIFF-emptyContext-bindContext,
DIFF-emptyStore-bindStore, DIFF-error-isFalse, DIFF-error-isTrue,
DIFF-isTrue-isFalse, DIFF-noConf-someConf, DIFF-noFType-someFType,
DIFF-noRawTable-someRawTable, DIFF-noTType-someTType, DIFF-noTable-someTable,
DIFF-rempty-rcons, DIFF-rtempty-rtcons, DIFF-ttempty-ttcons, EQ-Difference,
EQ-Intersection, EQ-Ref, EQ-SelectAllFrom, EQ-SelectAllFromWhere,
EQ-SelectSomeFrom, EQ-SelectSomeFromWhere, EQ-Tvalue, EQ-Union, EQ-VEquals,
EQ-VGreater, EQ-VSmaller, EQ-acons, EQ-bindContext, EQ-bindStore, EQ-conf,
EQ-ctype, EQ-rcons, EQ-rtcons, EQ-someConf, EQ-someFType, EQ-someRawTable,
EQ-someTType, EQ-someTable, EQ-table, EQ-ttcons, StoreContext-Lookup-WT,
StoreContextConsistent-false-INV, StoreContextConsistent-true-INV,
StoreContextConsistent0, StoreContextConsistent1, StoreContextConsistent2,
T-Difference, T-Intersection, T-SelectAllFrom, T-SelectAllFromWhere,
T-SelectSomeFrom, T-SelectSomeFromWhere, T-TTContext-Duplicate,
T-TTContext-Swap, T-Tvalue, T-Union, append-INV, append0, append1,
attachColToFrontRaw-INV, attachColToFrontRaw0, attachColToFrontRaw1,
attachColToFrontRaw2, attachColToFrontRaw3, checkPValidity-false-INV,
checkPValidity-true-INV, checkPValidity0, checkPValidity1, checkPValidity2,
ctypeIn-false-INV, ctypeIn-true-INV, ctypeIn0, ctypeIn1, difference-INV,
difference0, difference1, dropFirstColRaw-INV, dropFirstColRaw0,
dropFirstColRaw1, dropFirstColRaw2, findCol-INV, findCol0, findCol1, findCol2,
findColType0, findColType1, findColType2, getAL0, getQuery0, getRaw0,
getSomeConf0, getSomeFType0, getSomeRawTable0, getSomeTType0, getSomeTable0,
intersect-INV, intersect0, intersect1, isSomeConf-false-INV,
isSomeConf-true-INV, isSomeConf0, isSomeConf1, isSomeFType-false-INV,
isSomeFType-true-INV, isSomeFType0, isSomeFType1, isSomeRawTable-false-INV,
isSomeRawTable-true-INV, isSomeRawTable0, isSomeRawTable1,
isSomeTType-false-INV, isSomeTType-true-INV, isSomeTType0, isSomeTType1,
isSomeTable-false-INV, isSomeTable-true-INV, isSomeTable0, isSomeTable1,
isValue-false-INV, isValue-true-INV, isValue0, isValue1, isValue2, isValue3,
isValue4, isValue5, isValue6, isValue7, lookupContext-INV, lookupContext0,
lookupContext1, lookupContext2, lookupStore-INV, lookupStore0, lookupStore1,
lookupStore2, matchingAList-false-INV, matchingAList-true-INV, matchingAList0,
matchingAList1, matchingAList2, project-INV, project0, project1, project2,
projectEmptyCol0, projectEmptyCol1, projectFirstRaw0, projectFirstRaw1,
projectFirstRaw2, projectType0, projectType1, projectType2, rawDifference0,
rawDifference1, rawDifference3, rawDifference4, rawIntersection-INV,
rawIntersection0, rawIntersection1, rawIntersection2, rawIntersection3,
rawIntersection4, rawIntersection5, rawType-INV, rawType0, rawType1,
rawUnion-INV, rawUnion0, rawUnion1, rawUnion2, rawUnion3, reduce-INV, reduce0,
reduce1, reduce10, reduce11, reduce12, reduce13, reduce14, reduce15, reduce16,
reduce17, reduce18, reduce19, reduce2, reduce20, reduce21, reduce22, reduce23,
reduce24, reduce25, reduce26, reduce27, reduce28, reduce29, reduce3, reduce30,
reduce4, reduce5, reduce6, reduce7, reduce8, reduce9, rowIn-false-INV,
select-INV, select0, select1, select2, select3, singleRowSelect-INV,
singleRowSelect0, singleRowSelect1, singleRowSelect10, singleRowSelect11,
singleRowSelect12, singleRowSelect13, singleRowSelect14, singleRowSelect15,
singleRowSelect16, singleRowSelect17, singleRowSelect2, singleRowSelect3,
singleRowSelect4, singleRowSelect5, singleRowSelect6, singleRowSelect7,
singleRowSelect8, singleRowSelect9, union-INV, union0, union1,
welltypedRawtable-false-INV, welltypedRawtable-true-INV, welltypedRawtable0,
welltypedRawtable1, welltypedRow-false-INV, welltypedRow-true-INV,
welltypedRow0, welltypedRow1, welltypedRow2, welltypedtable-false-INV,
welltypedtable-true-INV, welltypedtable0

Those formulas are unsatisfiable:
---------------------------------

Begin of proof
| 
| ALPHA: (EQ-tcons) implies:
|   (1)   ! [v0: $int] :  ! [v1: $int] :  ! [v2: $int] :  ! [v3: $int] :  ! [v4:
|          $int] : ( ~ (vtcons(v1, v3) = v4) |  ~ (vtcons(v0, v2) = v4) | (v3 =
|            v2 & v1 = v0))
| 
| ALPHA: (rowIn1) implies:
|   (2)   ! [v0: $int] :  ! [v1: $int] :  ! [v2: $int] :  ! [v3: $int] : (v1 =
|          v0 |  ~ (vrowIn(v0, v3) = 0) |  ~ (vtcons(v1, v2) = v3) | vrowIn(v0,
|            v2) = 0)
|   (3)   ! [v0: $int] :  ! [v1: $int] :  ! [v2: $int] :  ! [v3: $int] :  ! [v4:
|          $int] : (v4 = 0 |  ~ (vrowIn(v0, v3) = v4) |  ~ (vtcons(v1, v2) = v3)
|          | ( ~ (v1 = v0) &  ? [v5: $int] : ( ~ (v5 = 0) & vrowIn(v0, v2) =
|              v5)))
| 
| DELTA: instantiating (rawDifference5) with fresh symbol all_304_0 gives:
|   (4)   ! [v0: $int] :  ! [v1: $int] :  ! [v2: $int] :  ! [v3: $int] :  ! [v4:
|          $int] : (v4 = all_304_0 | v0 = vtempty |  ~ (vrawDifference(v3, v1) =
|            v4) |  ~ (vtcons(v2, v0) = v3) |  ? [v5: $int] :  ? [v6: $int] : ((
|              ~ (v6 = 0) & vrowIn(v2, v1) = v6) | ( ~ (v5 = all_304_0) &
|              vrawDifference(v0, v1) = v5)))
| 
| DELTA: instantiating (test-4) with fresh symbols all_396_0, all_396_1,
|        all_396_2, all_396_3 gives:
|   (5)  vtcons(vrow3, all_396_1) = all_396_0 & vtcons(vrow1, all_396_3) =
|        all_396_2 & vtcons(vrow1, vtempty) = all_396_1 & vtcons(vrow2, vtempty)
|        = all_396_3 &  ? [v0: $int] : ( ~ (v0 = all_396_3) &
|          vrawDifference(all_396_2, all_396_0) = v0)
| 
| ALPHA: (5) implies:
|   (6)  vtcons(vrow2, vtempty) = all_396_3
|   (7)  vtcons(vrow1, vtempty) = all_396_1
|   (8)  vtcons(vrow1, all_396_3) = all_396_2
|   (9)  vtcons(vrow3, all_396_1) = all_396_0
|   (10)   ? [v0: $int] : ( ~ (v0 = all_396_3) & vrawDifference(all_396_2,
|             all_396_0) = v0)
| 
| DELTA: instantiating (10) with fresh symbol all_440_0 gives:
|   (11)   ~ (all_440_0 = all_396_3) & vrawDifference(all_396_2, all_396_0) =
|         all_440_0
| 
| ALPHA: (11) implies:
|   (12)   ~ (all_440_0 = all_396_3)
|   (13)  vrawDifference(all_396_2, all_396_0) = all_440_0
| 
| GROUND_INST: instantiating (rawDifference-INV) with all_440_0, all_396_0,
|              all_396_2, simplifying with (13) gives:
|   (14)   ? [v0: $int] :  ? [v1: $int] :  ? [v2: $int] :  ? [v3: $int] : ( ~
|           (v3 = 0) &  ~ (v1 = vtempty) & vrawDifference(v1, all_396_0) = v0 &
|           vrowIn(v2, all_396_0) = v3 & vtcons(v2, v1) = all_396_2 & vtcons(v2,
|             v0) = all_440_0) |  ? [v0: $int] :  ? [v1: $int] : (all_440_0 =
|           all_396_2 &  ~ (v1 = 0) & vrowIn(v0, all_396_0) = v1 & vtcons(v0,
|             vtempty) = all_396_2) |  ? [v0: $int] :  ? [v1: $int] : ( ~ (v0 =
|             vtempty) & vrawDifference(v0, all_396_0) = all_440_0 & vrowIn(v1,
|             all_396_0) = 0 & vtcons(v1, v0) = all_396_2) |  ? [v0: $int] :
|         (all_440_0 = vtempty & vrowIn(v0, all_396_0) = 0 & vtcons(v0, vtempty)
|           = all_396_2) | (all_440_0 = all_396_2 & all_396_0 = vtempty) |
|         (all_440_0 = vtempty & all_396_2 = vtempty)
| 
| GROUND_INST: instantiating (4) with all_440_0, all_396_2, vrow1, all_396_0,
|              all_396_3, simplifying with (8), (13) gives:
|   (15)  all_440_0 = all_304_0 | all_396_3 = vtempty |  ? [v0: $int] :  ? [v1:
|           $int] : (( ~ (v1 = 0) & vrowIn(vrow1, all_396_0) = v1) | ( ~ (v0 =
|               all_304_0) & vrawDifference(all_396_3, all_396_0) = v0))
| 
| BETA: splitting (15) gives:
| 
| Case 1:
| | 
| |   (16)  all_396_3 = vtempty
| | 
| | REDUCE: (6), (16) imply:
| |   (17)  vtcons(vrow2, vtempty) = vtempty
| | 
| | GROUND_INST: instantiating (DIFF-tempty-tcons) with vtempty, vrow2,
| |              simplifying with (17) gives:
| |   (18)  $false
| | 
| | CLOSE: (18) is inconsistent.
| | 
| Case 2:
| | 
| |   (19)   ~ (all_396_3 = vtempty)
| | 
| | BETA: splitting (14) gives:
| | 
| | Case 1:
| | | 
| | |   (20)   ? [v0: $int] :  ? [v1: $int] :  ? [v2: $int] :  ? [v3: $int] : (
| | |           ~ (v3 = 0) &  ~ (v1 = vtempty) & vrawDifference(v1, all_396_0) =
| | |           v0 & vrowIn(v2, all_396_0) = v3 & vtcons(v2, v1) = all_396_2 &
| | |           vtcons(v2, v0) = all_440_0) |  ? [v0: $int] :  ? [v1: $int] :
| | |         (all_440_0 = all_396_2 &  ~ (v1 = 0) & vrowIn(v0, all_396_0) = v1
| | |           & vtcons(v0, vtempty) = all_396_2) |  ? [v0: $int] :  ? [v1:
| | |           $int] : ( ~ (v0 = vtempty) & vrawDifference(v0, all_396_0) =
| | |           all_440_0 & vrowIn(v1, all_396_0) = 0 & vtcons(v1, v0) =
| | |           all_396_2) |  ? [v0: $int] : (all_440_0 = vtempty & vrowIn(v0,
| | |             all_396_0) = 0 & vtcons(v0, vtempty) = all_396_2) | (all_440_0
| | |           = all_396_2 & all_396_0 = vtempty)
| | | 
| | | BETA: splitting (20) gives:
| | | 
| | | Case 1:
| | | | 
| | | |   (21)   ? [v0: $int] :  ? [v1: $int] :  ? [v2: $int] :  ? [v3: $int] :
| | | |         ( ~ (v3 = 0) &  ~ (v1 = vtempty) & vrawDifference(v1, all_396_0)
| | | |           = v0 & vrowIn(v2, all_396_0) = v3 & vtcons(v2, v1) = all_396_2
| | | |           & vtcons(v2, v0) = all_440_0) |  ? [v0: $int] :  ? [v1: $int]
| | | |         : (all_440_0 = all_396_2 &  ~ (v1 = 0) & vrowIn(v0, all_396_0) =
| | | |           v1 & vtcons(v0, vtempty) = all_396_2) |  ? [v0: $int] :  ?
| | | |         [v1: $int] : ( ~ (v0 = vtempty) & vrawDifference(v0, all_396_0)
| | | |           = all_440_0 & vrowIn(v1, all_396_0) = 0 & vtcons(v1, v0) =
| | | |           all_396_2) |  ? [v0: $int] : (all_440_0 = vtempty & vrowIn(v0,
| | | |             all_396_0) = 0 & vtcons(v0, vtempty) = all_396_2)
| | | | 
| | | | BETA: splitting (21) gives:
| | | | 
| | | | Case 1:
| | | | | 
| | | | |   (22)   ? [v0: $int] :  ? [v1: $int] :  ? [v2: $int] :  ? [v3: $int]
| | | | |         : ( ~ (v3 = 0) &  ~ (v1 = vtempty) & vrawDifference(v1,
| | | | |             all_396_0) = v0 & vrowIn(v2, all_396_0) = v3 & vtcons(v2,
| | | | |             v1) = all_396_2 & vtcons(v2, v0) = all_440_0) |  ? [v0:
| | | | |           $int] :  ? [v1: $int] : (all_440_0 = all_396_2 &  ~ (v1 = 0)
| | | | |           & vrowIn(v0, all_396_0) = v1 & vtcons(v0, vtempty) =
| | | | |           all_396_2) |  ? [v0: $int] :  ? [v1: $int] : ( ~ (v0 =
| | | | |             vtempty) & vrawDifference(v0, all_396_0) = all_440_0 &
| | | | |           vrowIn(v1, all_396_0) = 0 & vtcons(v1, v0) = all_396_2)
| | | | | 
| | | | | BETA: splitting (22) gives:
| | | | | 
| | | | | Case 1:
| | | | | | 
| | | | | |   (23)   ? [v0: $int] :  ? [v1: $int] :  ? [v2: $int] :  ? [v3:
| | | | | |           $int] : ( ~ (v3 = 0) &  ~ (v1 = vtempty) &
| | | | | |           vrawDifference(v1, all_396_0) = v0 & vrowIn(v2, all_396_0)
| | | | | |           = v3 & vtcons(v2, v1) = all_396_2 & vtcons(v2, v0) =
| | | | | |           all_440_0) |  ? [v0: $int] :  ? [v1: $int] : (all_440_0 =
| | | | | |           all_396_2 &  ~ (v1 = 0) & vrowIn(v0, all_396_0) = v1 &
| | | | | |           vtcons(v0, vtempty) = all_396_2)
| | | | | | 
| | | | | | BETA: splitting (23) gives:
| | | | | | 
| | | | | | Case 1:
| | | | | | | 
| | | | | | |   (24)   ? [v0: $int] :  ? [v1: $int] :  ? [v2: $int] :  ? [v3:
| | | | | | |           $int] : ( ~ (v3 = 0) &  ~ (v1 = vtempty) &
| | | | | | |           vrawDifference(v1, all_396_0) = v0 & vrowIn(v2,
| | | | | | |             all_396_0) = v3 & vtcons(v2, v1) = all_396_2 &
| | | | | | |           vtcons(v2, v0) = all_440_0)
| | | | | | | 
| | | | | | | DELTA: instantiating (24) with fresh symbols all_595_0, all_595_1,
| | | | | | |        all_595_2, all_595_3 gives:
| | | | | | |   (25)   ~ (all_595_0 = 0) &  ~ (all_595_2 = vtempty) &
| | | | | | |         vrawDifference(all_595_2, all_396_0) = all_595_3 &
| | | | | | |         vrowIn(all_595_1, all_396_0) = all_595_0 &
| | | | | | |         vtcons(all_595_1, all_595_2) = all_396_2 &
| | | | | | |         vtcons(all_595_1, all_595_3) = all_440_0
| | | | | | | 
| | | | | | | ALPHA: (25) implies:
| | | | | | |   (26)   ~ (all_595_0 = 0)
| | | | | | |   (27)  vtcons(all_595_1, all_595_2) = all_396_2
| | | | | | |   (28)  vrowIn(all_595_1, all_396_0) = all_595_0
| | | | | | | 
| | | | | | | GROUND_INST: instantiating (1) with all_396_2, all_595_2,
| | | | | | |              all_396_3, all_595_1, vrow1, simplifying with (8),
| | | | | | |              (27) gives:
| | | | | | |   (29)  all_595_1 = vrow1 & all_595_2 = all_396_3
| | | | | | | 
| | | | | | | ALPHA: (29) implies:
| | | | | | |   (30)  all_595_1 = vrow1
| | | | | | | 
| | | | | | | REDUCE: (28), (30) imply:
| | | | | | |   (31)  vrowIn(vrow1, all_396_0) = all_595_0
| | | | | | | 
| | | | | | | GROUND_INST: instantiating (3) with all_595_0, all_396_0,
| | | | | | |              all_396_1, vrow3, vrow1, simplifying with (9), (31)
| | | | | | |              gives:
| | | | | | |   (32)  all_595_0 = 0 | ( ~ (vrow3 = vrow1) &  ? [v0: $int] : ( ~
| | | | | | |             (v0 = 0) & vrowIn(vrow1, all_396_1) = v0))
| | | | | | | 
| | | | | | | BETA: splitting (32) gives:
| | | | | | | 
| | | | | | | Case 1:
| | | | | | | | 
| | | | | | | |   (33)  all_595_0 = 0
| | | | | | | | 
| | | | | | | | REDUCE: (26), (33) imply:
| | | | | | | |   (34)   ~ (0 = 0)
| | | | | | | | 
| | | | | | | | CLOSE: (34) is inconsistent.
| | | | | | | | 
| | | | | | | Case 2:
| | | | | | | | 
| | | | | | | |   (35)   ~ (vrow3 = vrow1) &  ? [v0: $int] : ( ~ (v0 = 0) &
| | | | | | | |           vrowIn(vrow1, all_396_1) = v0)
| | | | | | | | 
| | | | | | | | ALPHA: (35) implies:
| | | | | | | |   (36)   ? [v0: $int] : ( ~ (v0 = 0) & vrowIn(vrow1, all_396_1)
| | | | | | | |           = v0)
| | | | | | | | 
| | | | | | | | DELTA: instantiating (36) with fresh symbol all_612_0 gives:
| | | | | | | |   (37)   ~ (all_612_0 = 0) & vrowIn(vrow1, all_396_1) =
| | | | | | | |         all_612_0
| | | | | | | | 
| | | | | | | | ALPHA: (37) implies:
| | | | | | | |   (38)   ~ (all_612_0 = 0)
| | | | | | | |   (39)  vrowIn(vrow1, all_396_1) = all_612_0
| | | | | | | | 
| | | | | | | | GROUND_INST: instantiating (3) with all_612_0, all_396_1,
| | | | | | | |              vtempty, vrow1, vrow1, simplifying with (7), (39)
| | | | | | | |              gives:
| | | | | | | |   (40)  all_612_0 = 0
| | | | | | | | 
| | | | | | | | REDUCE: (38), (40) imply:
| | | | | | | |   (41)   ~ (0 = 0)
| | | | | | | | 
| | | | | | | | CLOSE: (41) is inconsistent.
| | | | | | | | 
| | | | | | | End of split
| | | | | | | 
| | | | | | Case 2:
| | | | | | | 
| | | | | | |   (42)   ? [v0: $int] :  ? [v1: $int] : (all_440_0 = all_396_2 & 
| | | | | | |           ~ (v1 = 0) & vrowIn(v0, all_396_0) = v1 & vtcons(v0,
| | | | | | |             vtempty) = all_396_2)
| | | | | | | 
| | | | | | | DELTA: instantiating (42) with fresh symbols all_595_0, all_595_1
| | | | | | |        gives:
| | | | | | |   (43)  all_440_0 = all_396_2 &  ~ (all_595_0 = 0) &
| | | | | | |         vrowIn(all_595_1, all_396_0) = all_595_0 &
| | | | | | |         vtcons(all_595_1, vtempty) = all_396_2
| | | | | | | 
| | | | | | | ALPHA: (43) implies:
| | | | | | |   (44)  vtcons(all_595_1, vtempty) = all_396_2
| | | | | | | 
| | | | | | | GROUND_INST: instantiating (1) with all_396_2, vtempty, all_396_3,
| | | | | | |              all_595_1, vrow1, simplifying with (8), (44) gives:
| | | | | | |   (45)  all_595_1 = vrow1 & all_396_3 = vtempty
| | | | | | | 
| | | | | | | ALPHA: (45) implies:
| | | | | | |   (46)  all_396_3 = vtempty
| | | | | | | 
| | | | | | | REDUCE: (19), (46) imply:
| | | | | | |   (47)   ~ (0 = 0)
| | | | | | | 
| | | | | | | CLOSE: (47) is inconsistent.
| | | | | | | 
| | | | | | End of split
| | | | | | 
| | | | | Case 2:
| | | | | | 
| | | | | |   (48)   ? [v0: $int] :  ? [v1: $int] : ( ~ (v0 = vtempty) &
| | | | | |           vrawDifference(v0, all_396_0) = all_440_0 & vrowIn(v1,
| | | | | |             all_396_0) = 0 & vtcons(v1, v0) = all_396_2)
| | | | | | 
| | | | | | DELTA: instantiating (48) with fresh symbols all_595_0, all_595_1
| | | | | |        gives:
| | | | | |   (49)   ~ (all_595_1 = vtempty) & vrawDifference(all_595_1,
| | | | | |           all_396_0) = all_440_0 & vrowIn(all_595_0, all_396_0) = 0
| | | | | |         & vtcons(all_595_0, all_595_1) = all_396_2
| | | | | | 
| | | | | | ALPHA: (49) implies:
| | | | | |   (50)  vtcons(all_595_0, all_595_1) = all_396_2
| | | | | |   (51)  vrowIn(all_595_0, all_396_0) = 0
| | | | | |   (52)  vrawDifference(all_595_1, all_396_0) = all_440_0
| | | | | | 
| | | | | | GROUND_INST: instantiating (1) with all_396_2, all_595_1, all_396_3,
| | | | | |              all_595_0, vrow1, simplifying with (8), (50) gives:
| | | | | |   (53)  all_595_0 = vrow1 & all_595_1 = all_396_3
| | | | | | 
| | | | | | ALPHA: (53) implies:
| | | | | |   (54)  all_595_1 = all_396_3
| | | | | |   (55)  all_595_0 = vrow1
| | | | | | 
| | | | | | REDUCE: (52), (54) imply:
| | | | | |   (56)  vrawDifference(all_396_3, all_396_0) = all_440_0
| | | | | | 
| | | | | | REDUCE: (51), (55) imply:
| | | | | |   (57)  vrowIn(vrow1, all_396_0) = 0
| | | | | | 
| | | | | | GROUND_INST: instantiating (rawDifference2) with all_440_0,
| | | | | |              all_396_3, all_396_0, vrow2, simplifying with (6), (56)
| | | | | |              gives:
| | | | | |   (58)  all_440_0 = all_396_3 | vrowIn(vrow2, all_396_0) = 0
| | | | | | 
| | | | | | GROUND_INST: instantiating (2) with all_396_0, all_396_1, vrow3,
| | | | | |              vrow1, simplifying with (9), (57) gives:
| | | | | |   (59)  vrow3 = vrow1 | vrowIn(vrow1, all_396_1) = 0
| | | | | | 
| | | | | | GROUND_INST: instantiating (rowIn-true-INV) with all_396_0, vrow1,
| | | | | |              simplifying with (57) gives:
| | | | | |   (60)   ? [v0: $int] :  ? [v1: $int] :  ? [v2: $int] : (vtcons(v0,
| | | | | |             v1) = all_396_0 & (v0 = vrow1 | (v2 = 0 & vrowIn(vrow1,
| | | | | |                 v1) = 0)))
| | | | | | 
| | | | | | DELTA: instantiating (60) with fresh symbols all_606_0, all_606_1,
| | | | | |        all_606_2 gives:
| | | | | |   (61)  vtcons(all_606_2, all_606_1) = all_396_0 & (all_606_2 =
| | | | | |           vrow1 | (all_606_0 = 0 & vrowIn(vrow1, all_606_1) = 0))
| | | | | | 
| | | | | | ALPHA: (61) implies:
| | | | | |   (62)  vtcons(all_606_2, all_606_1) = all_396_0
| | | | | | 
| | | | | | BETA: splitting (58) gives:
| | | | | | 
| | | | | | Case 1:
| | | | | | | 
| | | | | | |   (63)  vrowIn(vrow2, all_396_0) = 0
| | | | | | | 
| | | | | | | BETA: splitting (59) gives:
| | | | | | | 
| | | | | | | Case 1:
| | | | | | | | 
| | | | | | | |   (64)  vrowIn(vrow1, all_396_1) = 0
| | | | | | | | 
| | | | | | | | GROUND_INST: instantiating (1) with all_396_0, all_606_1,
| | | | | | | |              all_396_1, all_606_2, vrow3, simplifying with (9),
| | | | | | | |              (62) gives:
| | | | | | | |   (65)  all_606_1 = all_396_1 & all_606_2 = vrow3
| | | | | | | | 
| | | | | | | | ALPHA: (65) implies:
| | | | | | | |   (66)  all_606_2 = vrow3
| | | | | | | |   (67)  all_606_1 = all_396_1
| | | | | | | | 
| | | | | | | | GROUND_INST: instantiating (rowIn-true-INV) with all_396_1,
| | | | | | | |              vrow1, simplifying with (64) gives:
| | | | | | | |   (68)   ? [v0: $int] :  ? [v1: $int] :  ? [v2: $int] :
| | | | | | | |         (vtcons(v0, v1) = all_396_1 & (v0 = vrow1 | (v2 = 0 &
| | | | | | | |               vrowIn(vrow1, v1) = 0)))
| | | | | | | | 
| | | | | | | | GROUND_INST: instantiating (2) with all_396_0, all_396_1, vrow3,
| | | | | | | |              vrow2, simplifying with (9), (63) gives:
| | | | | | | |   (69)  vrow3 = vrow2 | vrowIn(vrow2, all_396_1) = 0
| | | | | | | | 
| | | | | | | | DELTA: instantiating (68) with fresh symbols all_635_0,
| | | | | | | |        all_635_1, all_635_2 gives:
| | | | | | | |   (70)  vtcons(all_635_2, all_635_1) = all_396_1 & (all_635_2 =
| | | | | | | |           vrow1 | (all_635_0 = 0 & vrowIn(vrow1, all_635_1) =
| | | | | | | |             0))
| | | | | | | | 
| | | | | | | | ALPHA: (70) implies:
| | | | | | | |   (71)  vtcons(all_635_2, all_635_1) = all_396_1
| | | | | | | | 
| | | | | | | | BETA: splitting (69) gives:
| | | | | | | | 
| | | | | | | | Case 1:
| | | | | | | | | 
| | | | | | | | |   (72)  vrowIn(vrow2, all_396_1) = 0
| | | | | | | | | 
| | | | | | | | | GROUND_INST: instantiating (1) with all_396_1, all_635_1,
| | | | | | | | |              vtempty, all_635_2, vrow1, simplifying with (7),
| | | | | | | | |              (71) gives:
| | | | | | | | |   (73)  all_635_1 = vtempty & all_635_2 = vrow1
| | | | | | | | | 
| | | | | | | | | ALPHA: (73) implies:
| | | | | | | | |   (74)  all_635_2 = vrow1
| | | | | | | | |   (75)  all_635_1 = vtempty
| | | | | | | | | 
| | | | | | | | | GROUND_INST: instantiating (2) with all_396_1, vtempty, vrow1,
| | | | | | | | |              vrow2, simplifying with (7), (72) gives:
| | | | | | | | |   (76)  vrow1 = vrow2 | vrowIn(vrow2, vtempty) = 0
| | | | | | | | | 
| | | | | | | | | BETA: splitting (76) gives:
| | | | | | | | | 
| | | | | | | | | Case 1:
| | | | | | | | | | 
| | | | | | | | | |   (77)  vrowIn(vrow2, vtempty) = 0
| | | | | | | | | | 
| | | | | | | | | | GROUND_INST: instantiating (rowIn0) with vrow2, simplifying
| | | | | | | | | |              with (77) gives:
| | | | | | | | | |   (78)  $false
| | | | | | | | | | 
| | | | | | | | | | CLOSE: (78) is inconsistent.
| | | | | | | | | | 
| | | | | | | | | Case 2:
| | | | | | | | | | 
| | | | | | | | | |   (79)  vrow1 = vrow2
| | | | | | | | | | 
| | | | | | | | | | REDUCE: (79), (DIFF-row1-row2) imply:
| | | | | | | | | |   (80)   ~ (0 = 0)
| | | | | | | | | | 
| | | | | | | | | | CLOSE: (80) is inconsistent.
| | | | | | | | | | 
| | | | | | | | | End of split
| | | | | | | | | 
| | | | | | | | Case 2:
| | | | | | | | | 
| | | | | | | | |   (81)  vrow3 = vrow2
| | | | | | | | | 
| | | | | | | | | REDUCE: (81), (DIFF-row2-row3) imply:
| | | | | | | | |   (82)   ~ (0 = 0)
| | | | | | | | | 
| | | | | | | | | CLOSE: (82) is inconsistent.
| | | | | | | | | 
| | | | | | | | End of split
| | | | | | | | 
| | | | | | | Case 2:
| | | | | | | | 
| | | | | | | |   (83)  vrow3 = vrow1
| | | | | | | | 
| | | | | | | | REDUCE: (83), (DIFF-row1-row3) imply:
| | | | | | | |   (84)   ~ (0 = 0)
| | | | | | | | 
| | | | | | | | CLOSE: (84) is inconsistent.
| | | | | | | | 
| | | | | | | End of split
| | | | | | | 
| | | | | | Case 2:
| | | | | | | 
| | | | | | |   (85)  all_440_0 = all_396_3
| | | | | | | 
| | | | | | | REDUCE: (12), (85) imply:
| | | | | | |   (86)   ~ (0 = 0)
| | | | | | | 
| | | | | | | CLOSE: (86) is inconsistent.
| | | | | | | 
| | | | | | End of split
| | | | | | 
| | | | | End of split
| | | | | 
| | | | Case 2:
| | | | | 
| | | | |   (87)   ? [v0: $int] : (all_440_0 = vtempty & vrowIn(v0, all_396_0) =
| | | | |           0 & vtcons(v0, vtempty) = all_396_2)
| | | | | 
| | | | | DELTA: instantiating (87) with fresh symbol all_595_0 gives:
| | | | |   (88)  all_440_0 = vtempty & vrowIn(all_595_0, all_396_0) = 0 &
| | | | |         vtcons(all_595_0, vtempty) = all_396_2
| | | | | 
| | | | | ALPHA: (88) implies:
| | | | |   (89)  all_440_0 = vtempty
| | | | |   (90)  vtcons(all_595_0, vtempty) = all_396_2
| | | | | 
| | | | | REDUCE: (12), (89) imply:
| | | | |   (91)   ~ (all_396_3 = vtempty)
| | | | | 
| | | | | GROUND_INST: instantiating (1) with all_396_2, vtempty, all_396_3,
| | | | |              all_595_0, vrow1, simplifying with (8), (90) gives:
| | | | |   (92)  all_595_0 = vrow1 & all_396_3 = vtempty
| | | | | 
| | | | | ALPHA: (92) implies:
| | | | |   (93)  all_396_3 = vtempty
| | | | | 
| | | | | REDUCE: (19), (93) imply:
| | | | |   (94)   ~ (0 = 0)
| | | | | 
| | | | | CLOSE: (94) is inconsistent.
| | | | | 
| | | | End of split
| | | | 
| | | Case 2:
| | | | 
| | | |   (95)  all_440_0 = all_396_2 & all_396_0 = vtempty
| | | | 
| | | | ALPHA: (95) implies:
| | | |   (96)  all_396_0 = vtempty
| | | | 
| | | | REDUCE: (9), (96) imply:
| | | |   (97)  vtcons(vrow3, all_396_1) = vtempty
| | | | 
| | | | GROUND_INST: instantiating (DIFF-tempty-tcons) with all_396_1, vrow3,
| | | |              simplifying with (97) gives:
| | | |   (98)  $false
| | | | 
| | | | CLOSE: (98) is inconsistent.
| | | | 
| | | End of split
| | | 
| | Case 2:
| | | 
| | |   (99)  all_440_0 = vtempty & all_396_2 = vtempty
| | | 
| | | ALPHA: (99) implies:
| | |   (100)  all_396_2 = vtempty
| | | 
| | | REDUCE: (8), (100) imply:
| | |   (101)  vtcons(vrow1, all_396_3) = vtempty
| | | 
| | | GROUND_INST: instantiating (DIFF-tempty-tcons) with all_396_3, vrow1,
| | |              simplifying with (101) gives:
| | |   (102)  $false
| | | 
| | | CLOSE: (102) is inconsistent.
| | | 
| | End of split
| | 
| End of split
| 
End of proof
% SZS output end Proof for unsat-core

Loading SWV032+1.p ...

10 conjectures left

9 conjectures left

8 conjectures left

7 conjectures left

6 conjectures left

5 conjectures left

4 conjectures left

3 conjectures left

2 conjectures left

1 conjectures left

VALID
% SZS status Theorem for SWV032+1

Loading ARI495=1.p ...

VALID
% SZS status Theorem for ARI495=1

Loading DAT078=1.p ...
Preprocessing ...
Warning: ignoring some quantifiers
Constructing countermodel ...


Possible countermodel:
constant_in_array = 0 & in_array(0)
% SZS status GaveUp for DAT078=1

Loading SYN000_2.p ...
Prover 0: Options:  +triggersInConjecture -genTotalityAxioms=ctors +tightFunctionScopes -clausifier=simple -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=allUni -realRatSaturationRounds=0 -ignoreQuantifiers -proofConstruction=never -generateTriggers=all -randomSeed=1042961893
Prover 0: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 0: 
Prover 0:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 0: 
Prover 0:         ^
Prover 1: Options:  +triggersInConjecture -genTotalityAxioms=none -tightFunctionScopes -clausifier=none -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=maximal -realRatSaturationRounds=0 +ignoreQuantifiers -proofConstruction=always -generateTriggers=all -randomSeed=-1571432423
Prover 1: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 1: 
Prover 1:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 1: 
Prover 1:         ^
Prover 2: Options:  +triggersInConjecture -genTotalityAxioms=all -tightFunctionScopes -clausifier=simple +reverseFunctionalityPropagation +boolFunsAsPreds -triggerStrategy=allMinimalAndEmpty -realRatSaturationRounds=1 -ignoreQuantifiers -proofConstruction=never -generateTriggers=all -randomSeed=-1065072994
Prover 2: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 2: 
Prover 2:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 2: 
Prover 2:         ^
Prover 3: Options:  +triggersInConjecture -genTotalityAxioms=none -tightFunctionScopes -clausifier=none -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=maximal -realRatSaturationRounds=1 +ignoreQuantifiers -proofConstruction=never -generateTriggers=all -randomSeed=1922548996
Prover 3: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 3: 
Prover 3:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 3: 
Prover 3:         ^
Prover 4: Options:  +triggersInConjecture -genTotalityAxioms=none -tightFunctionScopes -clausifier=simple -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=allUni -realRatSaturationRounds=0 +ignoreQuantifiers -proofConstruction=always -generateTriggers=all -randomSeed=1868514696
Prover 4: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 4: 
Prover 4:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 4: 
Prover 4:         ^
Prover 5: Options:  +triggersInConjecture -genTotalityAxioms=none +tightFunctionScopes -clausifier=none +reverseFunctionalityPropagation +boolFunsAsPreds -triggerStrategy=allMaximal -realRatSaturationRounds=1 -ignoreQuantifiers -proofConstruction=never -generateTriggers=complete -randomSeed=1259561288
Prover 5: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 5: 
Prover 5:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 5: 
Prover 5:         ^
Prover 6: Options:  -triggersInConjecture -genTotalityAxioms=none +tightFunctionScopes -clausifier=none +reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=maximalOutermost -realRatSaturationRounds=0 -ignoreQuantifiers -proofConstruction=never -generateTriggers=all -randomSeed=-1399714365
Prover 6: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 6: 
Prover 6:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 6: 
Prover 6:         ^
Prover 7: Options:  +triggersInConjecture -genTotalityAxioms=none +tightFunctionScopes -clausifier=simple +reverseFunctionalityPropagation +boolFunsAsPreds -triggerStrategy=allUni -realRatSaturationRounds=1 +ignoreQuantifiers -proofConstruction=always -generateTriggers=all -randomSeed=-236303470
Prover 7: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 7: 
Prover 7:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 7: 
Prover 7:         ^
Prover 8: Options:  +triggersInConjecture -genTotalityAxioms=ctors -tightFunctionScopes -clausifier=none -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=maximal -realRatSaturationRounds=0 +ignoreQuantifiers -proofConstruction=always -generateTriggers=all -randomSeed=-200781089
Prover 8: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 8: 
Prover 8:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 8: 
Prover 8:         ^
Prover 9: Options:  +triggersInConjecture -genTotalityAxioms=none -tightFunctionScopes -clausifier=none -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=allMinimal -realRatSaturationRounds=1 +ignoreQuantifiers -proofConstruction=never -generateTriggers=all -randomSeed=1423531889
Prover 9: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 9: 
Prover 9:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 9: 
Prover 9:         ^
Prover 10: Options:  +triggersInConjecture -genTotalityAxioms=none +tightFunctionScopes -clausifier=simple -reverseFunctionalityPropagation +boolFunsAsPreds -triggerStrategy=maximal -realRatSaturationRounds=1 +ignoreQuantifiers -proofConstruction=always -generateTriggers=all -randomSeed=919308125
Prover 10: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 10: 
Prover 10:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 10: 
Prover 10:         ^
Prover 11: Options:  +triggersInConjecture -genTotalityAxioms=none +tightFunctionScopes -clausifier=simple -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=allUni -realRatSaturationRounds=1 +ignoreQuantifiers -proofConstruction=always -generateTriggers=all -randomSeed=-1509710984
Prover 11: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 11: 
Prover 11:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 11: 
Prover 11:         ^
Prover 12: Options:  -triggersInConjecture -genTotalityAxioms=none -tightFunctionScopes -clausifier=simple -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=maximalOutermost -realRatSaturationRounds=0 -ignoreQuantifiers -proofConstruction=never -generateTriggers=complete -randomSeed=2024365391
Prover 12: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 12: 
Prover 12:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 12: 
Prover 12:         ^
Prover 13: Options:  +triggersInConjecture -genTotalityAxioms=none -tightFunctionScopes -clausifier=simple -reverseFunctionalityPropagation +boolFunsAsPreds -triggerStrategy=maximal -realRatSaturationRounds=0 +ignoreQuantifiers -proofConstruction=always -generateTriggers=complete -randomSeed=1138197443
Prover 13: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 13: 
Prover 13:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 13: 
Prover 13:         ^
Prover 14: Options:  -triggersInConjecture -genTotalityAxioms=ctors -tightFunctionScopes -clausifier=simple +reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=allMinimal -realRatSaturationRounds=0 -ignoreQuantifiers -proofConstruction=never -generateTriggers=all -randomSeed=414236379
Prover 14: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 14: 
Prover 14:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 14: 
Prover 14:         ^
Prover 15: Options:  +triggersInConjecture -genTotalityAxioms=none -tightFunctionScopes -clausifier=none +reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=maximalOutermost -realRatSaturationRounds=1 -ignoreQuantifiers -proofConstruction=never -generateTriggers=complete -randomSeed=723048181
Prover 15: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 15: 
Prover 15:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 15: 
Prover 15:         ^
Prover 16: Options:  +triggersInConjecture -genTotalityAxioms=none +tightFunctionScopes -clausifier=simple +reverseFunctionalityPropagation +boolFunsAsPreds -triggerStrategy=maximal -realRatSaturationRounds=1 +ignoreQuantifiers -proofConstruction=always -generateTriggers=completeFrugal -randomSeed=-2043353683
Prover 16: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 16: 
Prover 16:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 16: 
Prover 16:         ^
Prover 17: Options:  +triggersInConjecture -genTotalityAxioms=none -tightFunctionScopes -clausifier=none -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=maximalOutermost -realRatSaturationRounds=0 -ignoreQuantifiers -proofConstruction=never -generateTriggers=all -randomSeed=642448422
Prover 17: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 17: 
Prover 17:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 17: 
Prover 17:         ^
Prover 18: Options:  +triggersInConjecture -genTotalityAxioms=ctors -tightFunctionScopes -clausifier=none -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=maximal -realRatSaturationRounds=1 +ignoreQuantifiers -proofConstruction=never -generateTriggers=all -randomSeed=-219651170
Prover 18: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 18: 
Prover 18:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 18: 
Prover 18:         ^
Prover 19: Options:  +triggersInConjecture -genTotalityAxioms=none -tightFunctionScopes -clausifier=none -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=maximal -realRatSaturationRounds=1 +ignoreQuantifiers -proofConstruction=always -generateTriggers=complete -randomSeed=-1780594085
Prover 19: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 19: 
Prover 19:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 19: 
Prover 19:         ^
Prover 20: Options:  +triggersInConjecture -genTotalityAxioms=ctors +tightFunctionScopes -clausifier=simple -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=allUni -realRatSaturationRounds=0 -ignoreQuantifiers -proofConstruction=never -generateTriggers=all -randomSeed=2065050644
Prover 20: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 20: 
Prover 20:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 20: 
Prover 20:         ^
Prover 21: Options:  +triggersInConjecture -genTotalityAxioms=none -tightFunctionScopes -clausifier=none -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=maximal -realRatSaturationRounds=0 +ignoreQuantifiers -proofConstruction=always -generateTriggers=all -randomSeed=201956991
Prover 21: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 21: 
Prover 21:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 21: 
Prover 21:         ^
Prover 22: Options:  +triggersInConjecture -genTotalityAxioms=all -tightFunctionScopes -clausifier=simple +reverseFunctionalityPropagation +boolFunsAsPreds -triggerStrategy=allMinimalAndEmpty -realRatSaturationRounds=1 -ignoreQuantifiers -proofConstruction=never -generateTriggers=all -randomSeed=386944239
Prover 22: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 22: 
Prover 22:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 22: 
Prover 22:         ^
Prover 23: Options:  +triggersInConjecture -genTotalityAxioms=none -tightFunctionScopes -clausifier=none -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=maximal -realRatSaturationRounds=1 +ignoreQuantifiers -proofConstruction=never -generateTriggers=all -randomSeed=-187882765
Prover 23: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 23: 
Prover 23:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 23: 
Prover 23:         ^
Prover 24: Options:  +triggersInConjecture -genTotalityAxioms=none -tightFunctionScopes -clausifier=simple -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=allUni -realRatSaturationRounds=0 +ignoreQuantifiers -proofConstruction=always -generateTriggers=all -randomSeed=-2107713799
Prover 24: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 24: 
Prover 24:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 24: 
Prover 24:         ^
Prover 25: Options:  +triggersInConjecture -genTotalityAxioms=none +tightFunctionScopes -clausifier=none +reverseFunctionalityPropagation +boolFunsAsPreds -triggerStrategy=allMaximal -realRatSaturationRounds=1 -ignoreQuantifiers -proofConstruction=never -generateTriggers=complete -randomSeed=-1484913614
Prover 25: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 25: 
Prover 25:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 25: 
Prover 25:         ^
Prover 26: Options:  -triggersInConjecture -genTotalityAxioms=none +tightFunctionScopes -clausifier=none +reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=maximalOutermost -realRatSaturationRounds=0 -ignoreQuantifiers -proofConstruction=never -generateTriggers=all -randomSeed=1769851187
Prover 26: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 26: 
Prover 26:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 26: 
Prover 26:         ^
Prover 27: Options:  +triggersInConjecture -genTotalityAxioms=none +tightFunctionScopes -clausifier=simple +reverseFunctionalityPropagation +boolFunsAsPreds -triggerStrategy=allUni -realRatSaturationRounds=1 +ignoreQuantifiers -proofConstruction=always -generateTriggers=all -randomSeed=1377679389
Prover 27: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 27: 
Prover 27:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 27: 
Prover 27:         ^
Prover 28: Options:  +triggersInConjecture -genTotalityAxioms=ctors -tightFunctionScopes -clausifier=none -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=maximal -realRatSaturationRounds=0 +ignoreQuantifiers -proofConstruction=always -generateTriggers=all -randomSeed=-230721668
Prover 28: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 28: 
Prover 28:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 28: 
Prover 28:         ^
Prover 29: Options:  +triggersInConjecture -genTotalityAxioms=none -tightFunctionScopes -clausifier=none -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=allMinimal -realRatSaturationRounds=1 +ignoreQuantifiers -proofConstruction=never -generateTriggers=all -randomSeed=-1555342872
Prover 29: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 29: 
Prover 29:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 29: 
Prover 29:         ^
Prover 30: Options:  +triggersInConjecture -genTotalityAxioms=none +tightFunctionScopes -clausifier=simple -reverseFunctionalityPropagation +boolFunsAsPreds -triggerStrategy=maximal -realRatSaturationRounds=1 +ignoreQuantifiers -proofConstruction=always -generateTriggers=all -randomSeed=-2057884579
Prover 30: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 30: 
Prover 30:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 30: 
Prover 30:         ^
Prover 31: Options:  +triggersInConjecture -genTotalityAxioms=none +tightFunctionScopes -clausifier=simple -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=allUni -realRatSaturationRounds=1 +ignoreQuantifiers -proofConstruction=always -generateTriggers=all -randomSeed=-208309572
Prover 31: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 31: 
Prover 31:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 31: 
Prover 31:         ^
Prover 32: Options:  -triggersInConjecture -genTotalityAxioms=none -tightFunctionScopes -clausifier=simple -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=maximalOutermost -realRatSaturationRounds=0 -ignoreQuantifiers -proofConstruction=never -generateTriggers=complete -randomSeed=361987840
Prover 32: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 32: 
Prover 32:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 32: 
Prover 32:         ^
Prover 33: Options:  +triggersInConjecture -genTotalityAxioms=none -tightFunctionScopes -clausifier=simple -reverseFunctionalityPropagation +boolFunsAsPreds -triggerStrategy=maximal -realRatSaturationRounds=0 +ignoreQuantifiers -proofConstruction=always -generateTriggers=complete -randomSeed=-302520431
Prover 33: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 33: 
Prover 33:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 33: 
Prover 33:         ^
Prover 34: Options:  -triggersInConjecture -genTotalityAxioms=ctors -tightFunctionScopes -clausifier=simple +reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=allMinimal -realRatSaturationRounds=0 -ignoreQuantifiers -proofConstruction=never -generateTriggers=all -randomSeed=101929379
Prover 34: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 34: 
Prover 34:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 34: 
Prover 34:         ^
Prover 35: Options:  +triggersInConjecture -genTotalityAxioms=none -tightFunctionScopes -clausifier=none +reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=maximalOutermost -realRatSaturationRounds=1 -ignoreQuantifiers -proofConstruction=never -generateTriggers=complete -randomSeed=-565657904
Prover 35: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 35: 
Prover 35:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 35: 
Prover 35:         ^
Prover 36: Options:  +triggersInConjecture -genTotalityAxioms=none +tightFunctionScopes -clausifier=simple +reverseFunctionalityPropagation +boolFunsAsPreds -triggerStrategy=maximal -realRatSaturationRounds=1 +ignoreQuantifiers -proofConstruction=always -generateTriggers=completeFrugal -randomSeed=2143189501
Prover 36: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 36: 
Prover 36:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 36: 
Prover 36:         ^
Prover 37: Options:  +triggersInConjecture -genTotalityAxioms=none -tightFunctionScopes -clausifier=none -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=maximalOutermost -realRatSaturationRounds=0 -ignoreQuantifiers -proofConstruction=never -generateTriggers=all -randomSeed=1164547244
Prover 37: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 37: 
Prover 37:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 37: 
Prover 37:         ^
Prover 38: Options:  +triggersInConjecture -genTotalityAxioms=ctors -tightFunctionScopes -clausifier=none -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=maximal -realRatSaturationRounds=1 +ignoreQuantifiers -proofConstruction=never -generateTriggers=all -randomSeed=-1325202317
Prover 38: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 38: 
Prover 38:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 38: 
Prover 38:         ^
Prover 39: Options:  +triggersInConjecture -genTotalityAxioms=none -tightFunctionScopes -clausifier=none -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=maximal -realRatSaturationRounds=1 +ignoreQuantifiers -proofConstruction=always -generateTriggers=complete -randomSeed=1398272867
Prover 39: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 39: 
Prover 39:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 39: 
Prover 39:         ^
Prover 40: Options:  +triggersInConjecture -genTotalityAxioms=ctors +tightFunctionScopes -clausifier=simple -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=allUni -realRatSaturationRounds=0 -ignoreQuantifiers -proofConstruction=never -generateTriggers=all -randomSeed=1604428820
Prover 40: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 40: 
Prover 40:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 40: 
Prover 40:         ^
Prover 41: Options:  +triggersInConjecture -genTotalityAxioms=none -tightFunctionScopes -clausifier=none -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=maximal -realRatSaturationRounds=0 +ignoreQuantifiers -proofConstruction=always -generateTriggers=all -randomSeed=116387013
Prover 41: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 41: 
Prover 41:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 41: 
Prover 41:         ^
Prover 42: Options:  +triggersInConjecture -genTotalityAxioms=all -tightFunctionScopes -clausifier=simple +reverseFunctionalityPropagation +boolFunsAsPreds -triggerStrategy=allMinimalAndEmpty -realRatSaturationRounds=1 -ignoreQuantifiers -proofConstruction=never -generateTriggers=all -randomSeed=-1420589912
Prover 42: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 42: 
Prover 42:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 42: 
Prover 42:         ^
Prover 43: Options:  +triggersInConjecture -genTotalityAxioms=none -tightFunctionScopes -clausifier=none -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=maximal -realRatSaturationRounds=1 +ignoreQuantifiers -proofConstruction=never -generateTriggers=all -randomSeed=163075241
Prover 43: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 43: 
Prover 43:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 43: 
Prover 43:         ^
Prover 44: Options:  +triggersInConjecture -genTotalityAxioms=none -tightFunctionScopes -clausifier=simple -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=allUni -realRatSaturationRounds=0 +ignoreQuantifiers -proofConstruction=always -generateTriggers=all -randomSeed=-481416861
Prover 44: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 44: 
Prover 44:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 44: 
Prover 44:         ^
Prover 45: Options:  +triggersInConjecture -genTotalityAxioms=none +tightFunctionScopes -clausifier=none +reverseFunctionalityPropagation +boolFunsAsPreds -triggerStrategy=allMaximal -realRatSaturationRounds=1 -ignoreQuantifiers -proofConstruction=never -generateTriggers=complete -randomSeed=-632592321
Prover 45: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 45: 
Prover 45:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 45: 
Prover 45:         ^
Prover 46: Options:  -triggersInConjecture -genTotalityAxioms=none +tightFunctionScopes -clausifier=none +reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=maximalOutermost -realRatSaturationRounds=0 -ignoreQuantifiers -proofConstruction=never -generateTriggers=all -randomSeed=-466052616
Prover 46: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 46: 
Prover 46:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 46: 
Prover 46:         ^
Prover 47: Options:  +triggersInConjecture -genTotalityAxioms=none +tightFunctionScopes -clausifier=simple +reverseFunctionalityPropagation +boolFunsAsPreds -triggerStrategy=allUni -realRatSaturationRounds=1 +ignoreQuantifiers -proofConstruction=always -generateTriggers=all -randomSeed=-1232563102
Prover 47: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 47: 
Prover 47:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 47: 
Prover 47:         ^
Prover 48: Options:  +triggersInConjecture -genTotalityAxioms=ctors -tightFunctionScopes -clausifier=none -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=maximal -realRatSaturationRounds=0 +ignoreQuantifiers -proofConstruction=always -generateTriggers=all -randomSeed=1133095194
Prover 48: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 48: 
Prover 48:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 48: 
Prover 48:         ^
Prover 49: Options:  +triggersInConjecture -genTotalityAxioms=none -tightFunctionScopes -clausifier=none -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=allMinimal -realRatSaturationRounds=1 +ignoreQuantifiers -proofConstruction=never -generateTriggers=all -randomSeed=1591344467
Prover 49: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 49: 
Prover 49:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 49: 
Prover 49:         ^
Prover 50: Options:  +triggersInConjecture -genTotalityAxioms=none +tightFunctionScopes -clausifier=simple -reverseFunctionalityPropagation +boolFunsAsPreds -triggerStrategy=maximal -realRatSaturationRounds=1 +ignoreQuantifiers -proofConstruction=always -generateTriggers=all -randomSeed=48229041
Prover 50: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 50: 
Prover 50:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 50: 
Prover 50:         ^
Prover 51: Options:  +triggersInConjecture -genTotalityAxioms=none +tightFunctionScopes -clausifier=simple -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=allUni -realRatSaturationRounds=1 +ignoreQuantifiers -proofConstruction=always -generateTriggers=all -randomSeed=58881155
Prover 51: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 51: 
Prover 51:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 51: 
Prover 51:         ^
Prover 52: Options:  -triggersInConjecture -genTotalityAxioms=none -tightFunctionScopes -clausifier=simple -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=maximalOutermost -realRatSaturationRounds=0 -ignoreQuantifiers -proofConstruction=never -generateTriggers=complete -randomSeed=-243282610
Prover 52: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 52: 
Prover 52:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 52: 
Prover 52:         ^
Prover 53: Options:  +triggersInConjecture -genTotalityAxioms=none -tightFunctionScopes -clausifier=simple -reverseFunctionalityPropagation +boolFunsAsPreds -triggerStrategy=maximal -realRatSaturationRounds=0 +ignoreQuantifiers -proofConstruction=always -generateTriggers=complete -randomSeed=-32686760
Prover 53: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 53: 
Prover 53:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 53: 
Prover 53:         ^
Prover 54: Options:  -triggersInConjecture -genTotalityAxioms=ctors -tightFunctionScopes -clausifier=simple +reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=allMinimal -realRatSaturationRounds=0 -ignoreQuantifiers -proofConstruction=never -generateTriggers=all -randomSeed=330729892
Prover 54: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 54: 
Prover 54:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 54: 
Prover 54:         ^
Prover 55: Options:  +triggersInConjecture -genTotalityAxioms=none -tightFunctionScopes -clausifier=none +reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=maximalOutermost -realRatSaturationRounds=1 -ignoreQuantifiers -proofConstruction=never -generateTriggers=complete -randomSeed=1209102356
Prover 55: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 55: 
Prover 55:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 55: 
Prover 55:         ^
Prover 56: Options:  +triggersInConjecture -genTotalityAxioms=none +tightFunctionScopes -clausifier=simple +reverseFunctionalityPropagation +boolFunsAsPreds -triggerStrategy=maximal -realRatSaturationRounds=1 +ignoreQuantifiers -proofConstruction=always -generateTriggers=completeFrugal -randomSeed=726993933
Prover 56: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 56: 
Prover 56:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 56: 
Prover 56:         ^
Prover 57: Options:  +triggersInConjecture -genTotalityAxioms=none -tightFunctionScopes -clausifier=none -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=maximalOutermost -realRatSaturationRounds=0 -ignoreQuantifiers -proofConstruction=never -generateTriggers=all -randomSeed=1573814852
Prover 57: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 57: 
Prover 57:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 57: 
Prover 57:         ^
Prover 58: Options:  +triggersInConjecture -genTotalityAxioms=ctors -tightFunctionScopes -clausifier=none -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=maximal -realRatSaturationRounds=1 +ignoreQuantifiers -proofConstruction=never -generateTriggers=all -randomSeed=-1415254175
Prover 58: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 58: 
Prover 58:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 58: 
Prover 58:         ^
Prover 59: Options:  +triggersInConjecture -genTotalityAxioms=none -tightFunctionScopes -clausifier=none -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=maximal -realRatSaturationRounds=1 +ignoreQuantifiers -proofConstruction=always -generateTriggers=complete -randomSeed=1068535387
Prover 59: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 59: 
Prover 59:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 59: 
Prover 59:         ^
Prover 60: Options:  +triggersInConjecture -genTotalityAxioms=ctors +tightFunctionScopes -clausifier=simple -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=allUni -realRatSaturationRounds=0 -ignoreQuantifiers -proofConstruction=never -generateTriggers=all -randomSeed=-889461327
Prover 60: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 60: 
Prover 60:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 60: 
Prover 60:         ^
Prover 61: Options:  +triggersInConjecture -genTotalityAxioms=none -tightFunctionScopes -clausifier=none -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=maximal -realRatSaturationRounds=0 +ignoreQuantifiers -proofConstruction=always -generateTriggers=all -randomSeed=1421471858
Prover 61: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 61: 
Prover 61:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 61: 
Prover 61:         ^
Prover 62: Options:  +triggersInConjecture -genTotalityAxioms=all -tightFunctionScopes -clausifier=simple +reverseFunctionalityPropagation +boolFunsAsPreds -triggerStrategy=allMinimalAndEmpty -realRatSaturationRounds=1 -ignoreQuantifiers -proofConstruction=never -generateTriggers=all -randomSeed=-2123050332
Prover 62: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 62: 
Prover 62:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 62: 
Prover 62:         ^
Prover 63: Options:  +triggersInConjecture -genTotalityAxioms=none -tightFunctionScopes -clausifier=none -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=maximal -realRatSaturationRounds=1 +ignoreQuantifiers -proofConstruction=never -generateTriggers=all -randomSeed=-38812614
Prover 63: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 63: 
Prover 63:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 63: 
Prover 63:         ^
Prover 64: Options:  +triggersInConjecture -genTotalityAxioms=none -tightFunctionScopes -clausifier=simple -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=allUni -realRatSaturationRounds=0 +ignoreQuantifiers -proofConstruction=always -generateTriggers=all -randomSeed=-420531079
Prover 64: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 64: 
Prover 64:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 64: 
Prover 64:         ^
Prover 65: Options:  +triggersInConjecture -genTotalityAxioms=none +tightFunctionScopes -clausifier=none +reverseFunctionalityPropagation +boolFunsAsPreds -triggerStrategy=allMaximal -realRatSaturationRounds=1 -ignoreQuantifiers -proofConstruction=never -generateTriggers=complete -randomSeed=1902203045
Prover 65: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 65: 
Prover 65:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 65: 
Prover 65:         ^
Prover 66: Options:  -triggersInConjecture -genTotalityAxioms=none +tightFunctionScopes -clausifier=none +reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=maximalOutermost -realRatSaturationRounds=0 -ignoreQuantifiers -proofConstruction=never -generateTriggers=all -randomSeed=-1999137778
Prover 66: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 66: 
Prover 66:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 66: 
Prover 66:         ^
Prover 67: Options:  +triggersInConjecture -genTotalityAxioms=none +tightFunctionScopes -clausifier=simple +reverseFunctionalityPropagation +boolFunsAsPreds -triggerStrategy=allUni -realRatSaturationRounds=1 +ignoreQuantifiers -proofConstruction=always -generateTriggers=all -randomSeed=-1784444971
Prover 67: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 67: 
Prover 67:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 67: 
Prover 67:         ^
Prover 68: Options:  +triggersInConjecture -genTotalityAxioms=ctors -tightFunctionScopes -clausifier=none -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=maximal -realRatSaturationRounds=0 +ignoreQuantifiers -proofConstruction=always -generateTriggers=all -randomSeed=461988181
Prover 68: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 68: 
Prover 68:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 68: 
Prover 68:         ^
Prover 69: Options:  +triggersInConjecture -genTotalityAxioms=none -tightFunctionScopes -clausifier=none -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=allMinimal -realRatSaturationRounds=1 +ignoreQuantifiers -proofConstruction=never -generateTriggers=all -randomSeed=424937036
Prover 69: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 69: 
Prover 69:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 69: 
Prover 69:         ^
Prover 70: Options:  +triggersInConjecture -genTotalityAxioms=none +tightFunctionScopes -clausifier=simple -reverseFunctionalityPropagation +boolFunsAsPreds -triggerStrategy=maximal -realRatSaturationRounds=1 +ignoreQuantifiers -proofConstruction=always -generateTriggers=all -randomSeed=1320890647
Prover 70: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 70: 
Prover 70:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 70: 
Prover 70:         ^
Prover 71: Options:  +triggersInConjecture -genTotalityAxioms=none +tightFunctionScopes -clausifier=simple -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=allUni -realRatSaturationRounds=1 +ignoreQuantifiers -proofConstruction=always -generateTriggers=all -randomSeed=1321695863
Prover 71: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 71: 
Prover 71:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 71: 
Prover 71:         ^
Prover 72: Options:  -triggersInConjecture -genTotalityAxioms=none -tightFunctionScopes -clausifier=simple -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=maximalOutermost -realRatSaturationRounds=0 -ignoreQuantifiers -proofConstruction=never -generateTriggers=complete -randomSeed=1725534720
Prover 72: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 72: 
Prover 72:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 72: 
Prover 72:         ^
Prover 73: Options:  +triggersInConjecture -genTotalityAxioms=none -tightFunctionScopes -clausifier=simple -reverseFunctionalityPropagation +boolFunsAsPreds -triggerStrategy=maximal -realRatSaturationRounds=0 +ignoreQuantifiers -proofConstruction=always -generateTriggers=complete -randomSeed=2092541447
Prover 73: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 73: 
Prover 73:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 73: 
Prover 73:         ^
Prover 74: Options:  -triggersInConjecture -genTotalityAxioms=ctors -tightFunctionScopes -clausifier=simple +reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=allMinimal -realRatSaturationRounds=0 -ignoreQuantifiers -proofConstruction=never -generateTriggers=all -randomSeed=-821628349
Prover 74: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 74: 
Prover 74:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 74: 
Prover 74:         ^
Prover 75: Options:  +triggersInConjecture -genTotalityAxioms=none -tightFunctionScopes -clausifier=none +reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=maximalOutermost -realRatSaturationRounds=1 -ignoreQuantifiers -proofConstruction=never -generateTriggers=complete -randomSeed=-641250122
Prover 75: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 75: 
Prover 75:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 75: 
Prover 75:         ^
Prover 76: Options:  +triggersInConjecture -genTotalityAxioms=none +tightFunctionScopes -clausifier=simple +reverseFunctionalityPropagation +boolFunsAsPreds -triggerStrategy=maximal -realRatSaturationRounds=1 +ignoreQuantifiers -proofConstruction=always -generateTriggers=completeFrugal -randomSeed=357901396
Prover 76: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 76: 
Prover 76:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 76: 
Prover 76:         ^
Prover 77: Options:  +triggersInConjecture -genTotalityAxioms=none -tightFunctionScopes -clausifier=none -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=maximalOutermost -realRatSaturationRounds=0 -ignoreQuantifiers -proofConstruction=never -generateTriggers=all -randomSeed=1545662569
Prover 77: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 77: 
Prover 77:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 77: 
Prover 77:         ^
Prover 78: Options:  +triggersInConjecture -genTotalityAxioms=ctors -tightFunctionScopes -clausifier=none -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=maximal -realRatSaturationRounds=1 +ignoreQuantifiers -proofConstruction=never -generateTriggers=all -randomSeed=-944224109
Prover 78: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 78: 
Prover 78:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 78: 
Prover 78:         ^
Prover 79: Options:  +triggersInConjecture -genTotalityAxioms=none -tightFunctionScopes -clausifier=none -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=maximal -realRatSaturationRounds=1 +ignoreQuantifiers -proofConstruction=always -generateTriggers=complete -randomSeed=1643069652
Prover 79: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 79: 
Prover 79:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 79: 
Prover 79:         ^
Prover 80: Options:  +triggersInConjecture -genTotalityAxioms=ctors +tightFunctionScopes -clausifier=simple -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=allUni -realRatSaturationRounds=0 -ignoreQuantifiers -proofConstruction=never -generateTriggers=all -randomSeed=-1797977383
Prover 80: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 80: 
Prover 80:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 80: 
Prover 80:         ^
Prover 81: Options:  +triggersInConjecture -genTotalityAxioms=none -tightFunctionScopes -clausifier=none -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=maximal -realRatSaturationRounds=0 +ignoreQuantifiers -proofConstruction=always -generateTriggers=all -randomSeed=805123327
Prover 81: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 81: 
Prover 81:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 81: 
Prover 81:         ^
Prover 82: Options:  +triggersInConjecture -genTotalityAxioms=all -tightFunctionScopes -clausifier=simple +reverseFunctionalityPropagation +boolFunsAsPreds -triggerStrategy=allMinimalAndEmpty -realRatSaturationRounds=1 -ignoreQuantifiers -proofConstruction=never -generateTriggers=all -randomSeed=-269775298
Prover 82: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 82: 
Prover 82:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 82: 
Prover 82:         ^
Prover 83: Options:  +triggersInConjecture -genTotalityAxioms=none -tightFunctionScopes -clausifier=none -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=maximal -realRatSaturationRounds=1 +ignoreQuantifiers -proofConstruction=never -generateTriggers=all -randomSeed=-1762136216
Prover 83: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 83: 
Prover 83:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 83: 
Prover 83:         ^
Prover 84: Options:  +triggersInConjecture -genTotalityAxioms=none -tightFunctionScopes -clausifier=simple -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=allUni -realRatSaturationRounds=0 +ignoreQuantifiers -proofConstruction=always -generateTriggers=all -randomSeed=842260126
Prover 84: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 84: 
Prover 84:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 84: 
Prover 84:         ^
Prover 85: Options:  +triggersInConjecture -genTotalityAxioms=none +tightFunctionScopes -clausifier=none +reverseFunctionalityPropagation +boolFunsAsPreds -triggerStrategy=allMaximal -realRatSaturationRounds=1 -ignoreQuantifiers -proofConstruction=never -generateTriggers=complete -randomSeed=812147089
Prover 85: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 85: 
Prover 85:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 85: 
Prover 85:         ^
Prover 86: Options:  -triggersInConjecture -genTotalityAxioms=none +tightFunctionScopes -clausifier=none +reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=maximalOutermost -realRatSaturationRounds=0 -ignoreQuantifiers -proofConstruction=never -generateTriggers=all -randomSeed=-1444700512
Prover 86: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 86: 
Prover 86:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 86: 
Prover 86:         ^
Prover 87: Options:  +triggersInConjecture -genTotalityAxioms=none +tightFunctionScopes -clausifier=simple +reverseFunctionalityPropagation +boolFunsAsPreds -triggerStrategy=allUni -realRatSaturationRounds=1 +ignoreQuantifiers -proofConstruction=always -generateTriggers=all -randomSeed=-105434564
Prover 87: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 87: 
Prover 87:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 87: 
Prover 87:         ^
Prover 88: Options:  +triggersInConjecture -genTotalityAxioms=ctors -tightFunctionScopes -clausifier=none -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=maximal -realRatSaturationRounds=0 +ignoreQuantifiers -proofConstruction=always -generateTriggers=all -randomSeed=-170214836
Prover 88: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 88: 
Prover 88:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 88: 
Prover 88:         ^
Prover 89: Options:  +triggersInConjecture -genTotalityAxioms=none -tightFunctionScopes -clausifier=none -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=allMinimal -realRatSaturationRounds=1 +ignoreQuantifiers -proofConstruction=never -generateTriggers=all -randomSeed=408961447
Prover 89: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 89: 
Prover 89:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 89: 
Prover 89:         ^
Prover 90: Options:  +triggersInConjecture -genTotalityAxioms=none +tightFunctionScopes -clausifier=simple -reverseFunctionalityPropagation +boolFunsAsPreds -triggerStrategy=maximal -realRatSaturationRounds=1 +ignoreQuantifiers -proofConstruction=always -generateTriggers=all -randomSeed=819886450
Prover 90: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 90: 
Prover 90:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 90: 
Prover 90:         ^
Prover 91: Options:  +triggersInConjecture -genTotalityAxioms=none +tightFunctionScopes -clausifier=simple -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=allUni -realRatSaturationRounds=1 +ignoreQuantifiers -proofConstruction=always -generateTriggers=all -randomSeed=-163948167
Prover 91: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 91: 
Prover 91:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 91: 
Prover 91:         ^
Prover 92: Options:  -triggersInConjecture -genTotalityAxioms=none -tightFunctionScopes -clausifier=simple -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=maximalOutermost -realRatSaturationRounds=0 -ignoreQuantifiers -proofConstruction=never -generateTriggers=complete -randomSeed=-2116537737
Prover 92: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 92: 
Prover 92:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 92: 
Prover 92:         ^
Prover 93: Options:  +triggersInConjecture -genTotalityAxioms=none -tightFunctionScopes -clausifier=simple -reverseFunctionalityPropagation +boolFunsAsPreds -triggerStrategy=maximal -realRatSaturationRounds=0 +ignoreQuantifiers -proofConstruction=always -generateTriggers=complete -randomSeed=505000526
Prover 93: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 93: 
Prover 93:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 93: 
Prover 93:         ^
Prover 94: Options:  -triggersInConjecture -genTotalityAxioms=ctors -tightFunctionScopes -clausifier=simple +reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=allMinimal -realRatSaturationRounds=0 -ignoreQuantifiers -proofConstruction=never -generateTriggers=all -randomSeed=-978033349
Prover 94: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 94: 
Prover 94:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 94: 
Prover 94:         ^
Prover 95: Options:  +triggersInConjecture -genTotalityAxioms=none -tightFunctionScopes -clausifier=none +reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=maximalOutermost -realRatSaturationRounds=1 -ignoreQuantifiers -proofConstruction=never -generateTriggers=complete -randomSeed=929828609
Prover 95: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 95: 
Prover 95:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 95: 
Prover 95:         ^
Prover 96: Options:  +triggersInConjecture -genTotalityAxioms=none +tightFunctionScopes -clausifier=simple +reverseFunctionalityPropagation +boolFunsAsPreds -triggerStrategy=maximal -realRatSaturationRounds=1 +ignoreQuantifiers -proofConstruction=always -generateTriggers=completeFrugal -randomSeed=301858615
Prover 96: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 96: 
Prover 96:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 96: 
Prover 96:         ^
Prover 97: Options:  +triggersInConjecture -genTotalityAxioms=none -tightFunctionScopes -clausifier=none -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=maximalOutermost -realRatSaturationRounds=0 -ignoreQuantifiers -proofConstruction=never -generateTriggers=all -randomSeed=1382862363
Prover 97: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 97: 
Prover 97:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 97: 
Prover 97:         ^
Prover 98: Options:  +triggersInConjecture -genTotalityAxioms=ctors -tightFunctionScopes -clausifier=none -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=maximal -realRatSaturationRounds=1 +ignoreQuantifiers -proofConstruction=never -generateTriggers=all -randomSeed=-1960688378
Prover 98: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 98: 
Prover 98:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 98: 
Prover 98:         ^
Prover 99: Options:  +triggersInConjecture -genTotalityAxioms=none -tightFunctionScopes -clausifier=none -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=maximal -realRatSaturationRounds=1 +ignoreQuantifiers -proofConstruction=always -generateTriggers=complete -randomSeed=1437240348
Prover 99: Exception: [70.9] failure: `<=>' expected but `,' found
Prover 99: 
Prover 99:         , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)
Prover 99: 
Prover 99:         ^
% SZS status Error for SYN000_2
[70.9] failure: `<=>' expected but `,' found

        , ( q($let_tt(! [Z1: $i] : f(Z1) = g(Z1,b), f(a)),X)

        ^
Loading DAT013=1.p ...

VALID
% SZS status Theorem for DAT013=1



% SZS output start Proof for DAT013=1
Assumptions after simplification:
---------------------------------

  (co1)
   ? [v0: $int] :  ? [v1: $int] :  ? [v2: $int] : (in_array(v0) &  ! [v3: $int]
    :  ! [v4: $int] : ( ~ ($lesseq(v4, 0) |  ~ ($lesseq(v3, v2)) |  ~
        ($lesseq(v1, v3)) |  ~ (read(v0, v3) = v4)) &  ? [v3: $int] :  ? [v4:
        $int] : ($lesseq(v4, 0)$lesseq(v3, v2) & $lesseq(3, $difference(v3, v1))
        & read(v0, v3) = v4))

Further assumptions not needed in the proof:
--------------------------------------------
ax1, ax2

Those formulas are unsatisfiable:
---------------------------------

Begin of proof
| 
| DELTA: instantiating (co1) with fresh symbols all_4_0, all_4_1, all_4_2 gives:
|   (1)  in_array(all_4_2) &  ! [v0: $int] :  ! [v1: $int] : ( ~ ($lesseq(v1, 0)
|            |  ~ ($lesseq(v0, all_4_0)) |  ~ ($lesseq(all_4_1, v0)) |  ~
|            (read(all_4_2, v0) = v1)) &  ? [v0: $int] :  ? [v1: $int] :
|          ($lesseq(v1, 0)$lesseq(v0, all_4_0) & $lesseq(3, $difference(v0,
|                all_4_1)) & read(all_4_2, v0) = v1)
| 
| ALPHA: (1) implies:
|   (2)   ! [v0: $int] :  ! [v1: $int] : ( ~ ($lesseq(v1, 0) |  ~ ($lesseq(v0,
|                all_4_0)) |  ~ ($lesseq(all_4_1, v0)) |  ~ (read(all_4_2, v0) =
|              v1))
|   (3)   ? [v0: $int] :  ? [v1: $int] : ($lesseq(v1, 0)$lesseq(v0, all_4_0) &
|          $lesseq(3, $difference(v0, all_4_1)) & read(all_4_2, v0) = v1)
| 
| DELTA: instantiating (3) with fresh symbols all_7_0, all_7_1 gives:
|   (4)  $lesseq(all_7_0, 0)$lesseq(all_7_1, all_4_0) & $lesseq(3,
|          $difference(all_7_1, all_4_1)) & read(all_4_2, all_7_1) = all_7_0
| 
| ALPHA: (4) implies:
|   (5)  $lesseq(3, $difference(all_7_1, all_4_1))
|   (6)  $lesseq(all_7_1, all_4_0)
|   (7)  $lesseq(all_7_0, 0)
|   (8)  read(all_4_2, all_7_1) = all_7_0
| 
| GROUND_INST: instantiating (2) with all_7_0, all_7_1, simplifying with (8)
|              gives:
|   (9)   ~ ($lesseq(all_7_0, 0) |  ~ ($lesseq(all_7_1, all_4_0)) |  ~
|          ($lesseq(all_4_1, all_7_1))
| 
| BETA: splitting (9) gives:
| 
| Case 1:
| | 
| |   (10)  $lesseq(1, all_7_0)
| | 
| | COMBINE_INEQS: (7), (10) imply:
| |   (11)  $lesseq(0, -1)
| | 
| | CLOSE: (11) is inconsistent.
| | 
| Case 2:
| | 
| |   (12)   ~ ($lesseq(all_7_1, all_4_0)) |  ~ ($lesseq(all_4_1, all_7_1))
| | 
| | BETA: splitting (12) gives:
| | 
| | Case 1:
| | | 
| | |   (13)  $lesseq(1, $difference(all_7_1, all_4_0))
| | | 
| | | COMBINE_INEQS: (6), (13) imply:
| | |   (14)  $lesseq(0, -1)
| | | 
| | | CLOSE: (14) is inconsistent.
| | | 
| | Case 2:
| | | 
| | |   (15)  $lesseq(1, $difference(all_4_1, all_7_1))
| | | 
| | | COMBINE_INEQS: (5), (15) imply:
| | |   (16)  $lesseq(0, -1)
| | | 
| | | CLOSE: (16) is inconsistent.
| | | 
| | End of split
| | 
| End of split
| 
End of proof
% SZS output end Proof for DAT013=1

