#!/bin/sh

# test the TPTP parser

PRI=../../princess

TESTS="ARI120=1.p ARI184=1.p ARI496=1.p ARI595=1.p ARI616=1.p ARI620=1.p \
       ARI526=1.p ARI522=1.p ARI522=1-mod.p \
       GEG021=1.p PUZ133=2.p SYN050-1.p \
       SYO561_1.p SYO563+1.p SYO563+2.p let-tests.p \
       quotes.p multiple-conjectures.p SYN340+1.p SYN340+1-mod.p \
       set-Bidule-Inter.p"

$PRI "$@" $TESTS 2>&1 | grep -v '^Prover'

$PRI "$@" -timeout=60 PUZ001+1.p 2>&1 | grep -v '^Prover'

$PRI "$@" +unsatCore -multiStrategy unsat-core.p
$PRI "$@" +printProof -multiStrategy unsat-core.p

$PRI "$@" SWV032+1.p -assert +splitConjectures 2>&1 | grep -v '^Prover'
$PRI "$@" -assert ARI495\=1.p 2>&1 | grep -v '^Prover'

$PRI "$@" DAT078\=1.p -multiStrategy +triggersInConjecture -genTotalityAxioms=none -tightFunctionScopes -clausifier=none -reverseFunctionalityPropagation -boolFunsAsPreds -triggerStrategy=maximal -realRatSaturationRounds=0 +ignoreQuantifiers -generateTriggers=all

# will exit with an exception
$PRI "$@" SYN000_2.p

$PRI "$@" +printProof DAT013=1.p 2>&1 | grep -v '^Prover'

